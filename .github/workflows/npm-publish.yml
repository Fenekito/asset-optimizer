# This workflow will run tests using node and then publish a package to GitHub Packages when a release is created
# For more information see: https://docs.github.com/en/actions/publishing-packages/publishing-nodejs-packages

name: Node.js Package

on:
  release:
    types: [created]

permissions:
  contents: write

jobs:
  update-release-notes:
    name: Update Release notes from CHANGELOG
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Extract release notes from CHANGELOG.md
        id: changelog
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');
            const core = require('@actions/core');
            const changelogPath = path.join(process.cwd(), 'CHANGELOG.md');
            if (!fs.existsSync(changelogPath)) {
              core.warning('CHANGELOG.md not found; skipping release body update.');
              core.setOutput('body', '');
              return;
            }
            const changelog = fs.readFileSync(changelogPath, 'utf8');
            const tag = (context.payload.release && context.payload.release.tag_name) || process.env.GITHUB_REF_NAME || '';
            const version = tag.replace(/^v/, '');
            const lines = changelog.split('\n');
            const headerRe = new RegExp(`^##\\s*\\[?${version}\\]?\\b`);
            let start = -1;
            for (let i = 0; i < lines.length; i++) {
              if (headerRe.test(lines[i])) { start = i; break; }
            }
            if (start === -1) {
              core.warning(`No changelog entry found for version: ${version}`);
              core.setOutput('body', '');
              return;
            }
            // Capture until next top-level version header (## ) or end of file
            let end = lines.length;
            for (let j = start + 1; j < lines.length; j++) {
              if (/^##\s+\[?/.test(lines[j])) { end = j; break; }
            }
            // Exclude the version header line itself from the release body
            const section = lines.slice(start + 1, end).join('\n').trim();
            core.setOutput('body', section);
      - name: Update GitHub Release body
        if: steps.changelog.outputs.body != ''
        uses: actions/github-script@v7
        with:
          script: |
            const body = `${{ steps.changelog.outputs.body }}`;
            const releaseId = context.payload.release.id;
            await github.rest.repos.updateRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: releaseId,
              body,
            });
  build:
    needs: update-release-notes
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - run: npm ci
      - run: npm test

  publish-npm:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: https://registry.npmjs.org/
      - run: npm ci
      - run: npm run build
      - run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{secrets.npm_token}}
